name: Update Aggregated Data

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 5 * * *'  # 5 AM UTC daily
  workflow_dispatch:

permissions:
  contents: write

jobs:
  aggregate:
    # Associate run with the protected / scoped GitHub Environment 'beta' to use its secrets & protection rules
    environment: beta
    runs-on: ubuntu-latest
    env:
      PROFILE: capital_region
      # Secrets come from Environment 'beta'
      GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
      XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      AUGMENT_WITH_OPENAI: ${{ secrets.AUGMENT_WITH_OPENAI }}
      MAX_RUN_PASSES: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run aggregation
        id: aggregate
        run: |
          python scripts/aggregate.py || echo 'Aggregation script exited with non-zero status (soft fail).'

      - name: Validate JSON outputs
        run: |
          python - <<'PY'
          import json, os, sys
          ok = True
          for f in ['docs/events.json','docs/restaurants.json']:
            if not os.path.exists(f):
              print(f'MISSING {f}')
              continue
            try:
              with open(f) as fh:
                json.load(fh)
              print(f'VALID {f}')
            except Exception as e:
              print(f'INVALID {f}: {e}')
              ok = False
          sys.exit(0)
          PY

      - name: Detect changes in data files
        id: changes
        run: |
          git add docs/events.json docs/restaurants.json || true
          if git diff --cached --quiet -- docs/events.json docs/restaurants.json; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push updated data
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config user.name 'github-actions'
          git config user.email 'actions@users.noreply.github.com'
          git commit -m 'chore: update aggregated data' -- docs/events.json docs/restaurants.json
          git push

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-artifacts
          path: debug/
